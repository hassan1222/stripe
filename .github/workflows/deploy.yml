name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Copy files to droplet
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_SERVER }} << 'EOF'
          mkdir -p ${{ secrets.DEPLOY_PATH }}
        EOF
        rsync -avz --delete ./ ${{ secrets.DEPLOY_SERVER }}:${{ secrets.DEPLOY_PATH }}

    - name: Deploy and configure applications
      run: |
        ssh ${{ secrets.DEPLOY_SERVER }} << 'EOF'
          # Server deployment
          cd ${{ secrets.DEPLOY_PATH }}/server
          
          # Create server .env file with all required variables
          cat > .env << 'EOL'
          MONGODB_URI=${{ secrets.MONGODB_URI }}
          STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}
          SESSION_SECRET=${{ secrets.SESSION_SECRET }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          NODE_ENV=production
          PORT=5000
          EOL
          
          # Clean install dependencies
          echo "Cleaning up old dependencies..."
          rm -rf node_modules package-lock.json
          
          echo "Clearing npm cache..."
          npm cache clean --force
          
          echo "Installing dependencies..."
          npm install
          
          # Verify node_modules exists and express is installed
          if [ ! -d "node_modules" ]; then
            echo "Error: node_modules directory not found after installation"
            exit 1
          fi
          
          if [ ! -d "node_modules/express" ]; then
            echo "Error: express module not found in node_modules"
            exit 1
          fi
          
          # List installed modules for debugging
          echo "Installed modules:"
          ls -la node_modules
          
          # Set production environment
          export NODE_ENV=production
          
          # Restart the server with PM2
          echo "Restarting server..."
          pm2 delete my-server || true
          pm2 start server.js --name my-server
          
          # Client deployment
          cd ../client
          
          # Create client .env file with all required variables
          cat > .env << 'EOL'
          REACT_APP_API_URL=http://178.128.155.240:5000/api/auth
          EOL
          
          # Clean install client dependencies
          echo "Installing client dependencies..."
          rm -rf node_modules package-lock.json
          npm cache clean --force
          npm install
          npm run build
          
          # Verify build directory
          if [ ! -d "build" ]; then
            echo "Error: build directory not found"
            exit 1
          fi
          
          # Setup web server directory
          sudo mkdir -p /var/www/html
          sudo cp -r build/* /var/www/html/
          sudo chown -R www-data:www-data /var/www/html
          sudo chmod -R 755 /var/www/html
          
          # Configure firewall
          sudo ufw allow 5000/tcp
          
          # Restart nginx
          sudo systemctl restart nginx || true
          
          # Check server status and logs
          echo "Checking server status..."
          pm2 status
          echo "Server logs:"
          pm2 logs my-server --lines 20
        EOF
