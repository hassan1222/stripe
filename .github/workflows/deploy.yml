name: Deploy to DigitalOcean

on:
  push:
    branches: [ main, master ]  # Change to your main branch name
  pull_request:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    # Checkout code
    - name: Checkout code
      uses: actions/checkout@v4

    # Setup Node.js (for any build steps if needed)
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    # Login to Docker Hub (optional - for private repositories)
    # - name: Login to Docker Hub
    #   uses: docker/login-action@v3
    #   with:
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}

    # Setup SSH key for DigitalOcean droplet
    - name: Setup SSH key
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    # Add server to known hosts
    - name: Add server to known hosts
      run: |
        ssh-keyscan -H 159.223.118.251 >> ~/.ssh/known_hosts

    # Create environment files on server
    - name: Create environment files
      run: |
        ssh root@159.223.118.251 << 'EOF'
          mkdir -p /opt/myapp/server
          mkdir -p /opt/myapp/client
        EOF

    # Copy environment variables to server
    - name: Copy server environment file
      run: |
        echo "${{ secrets.SERVER_ENV }}" | ssh root@159.223.118.251 'cat > /opt/myapp/server/.env'

    - name: Copy client environment file
      run: |
        echo "${{ secrets.CLIENT_ENV }}" | ssh root@159.223.118.251 'cat > /opt/myapp/client/.env'

    # Deploy to DigitalOcean droplet
    - name: Deploy to server
      run: |
        ssh root@159.223.118.251 << 'EOF'
          # Navigate to app directory
          cd /opt/myapp
          
          # Remove existing code
          rm -rf client server docker-compose.yml nginx.conf
          
          # Clone the repository
          git clone https://github.com/${{ github.repository }} temp_repo
          
          # Move files to correct location
          mv temp_repo/* .
          mv temp_repo/.* . 2>/dev/null || true
          rm -rf temp_repo
          
          # Stop existing containers
          docker-compose down || true
          
          # Remove old images to free space
          docker system prune -f
          
          # Build and start new containers
          docker-compose up -d --build
          
          # Show running containers
          docker ps
        EOF

    # Health check
    - name: Health check
      run: |
        sleep 30  # Wait for containers to start
        curl -f http://159.223.118.251 || exit 1
        echo "Deployment successful!"